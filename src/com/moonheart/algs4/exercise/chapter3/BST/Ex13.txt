3.2.13 Give nonrecursive implementations of get() and put() for BST.

public Value get(Key key) {
    for(Node x = root; x != null;) {
        int comp = x.key.compareTo(key);
        if(comp == 0) return x.val;
        else if(comp < 0) x = x.left;
        else x = x.right;
    }
    return null;
}

comment from text book:
The implementation of put() is more complicated because of the need to save a pointer
to the parent node to link in the new node at the bottom. Also, you need a separate
pass to check whether the key is already in the table because of the need to update the
counts. Since there are many more searches than inserts in performance-critical implementations,
using this code for get() is justified; the corresponding change for put()
might not be noticed.
